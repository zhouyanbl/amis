define('docs/renderers/Wizard.md', function(require, exports, module) {

  module.exports = {
    "html": "<h3><a class=\"anchor\" name=\"wizard\" href=\"#wizard\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wizard</h3><p>表单向导，能够配置多个步骤引导用户一步一步完成表单提交。</p>\n<ul>\n<li><code>type</code> 请设置 <code>wizard</code>。</li>\n<li><code>mode</code> 展示模式，请选择：<code>horizontal</code> 或者 <code>vertical</code>，默认为 <code>horizontal</code>。</li>\n<li><code>api</code> 最后一步保存的接口。</li>\n<li><code>initApi</code> 初始化数据接口。</li>\n<li><code>initFetch</code> 初始是否拉取数据。</li>\n<li><code>initFetchOn</code> 初始是否拉取数据，通过表达式来配置。</li>\n<li><code>actionPrevLabel</code> 上一步按钮名称，默认：<code>上一步</code>。</li>\n<li><code>actionNextLabel</code> 下一步按钮名称<code>下一步</code>。</li>\n<li><code>actionNextSaveLabel</code> 保存并下一步按钮名称，默认：<code>保存并下一步</code>。</li>\n<li><code>actionFinishLabel</code> 完成按钮名称，默认：<code>完成</code>。</li>\n<li><code>className</code> 外层 CSS 类名。</li>\n<li><code>actionClassName</code> 按钮 CSS 类名，默认：<code>btn-sm btn-default</code>。</li>\n<li><code>reload</code> 操作完后刷新目标对象。请填写目标组件设置的 name 值，如果填写为 <code>window</code> 则让当前页面整体刷新。</li>\n<li><code>redirect</code> 操作完后跳转。</li>\n<li><code>target</code> 可以把数据提交给别的组件而不是自己保存。请填写目标组件设置的 name 值，如果填写为 <code>window</code> 则把数据同步到地址栏上，同时依赖这些数据的组件会自动重新刷新。</li>\n<li><code>steps</code> 数组，配置步骤信息。</li>\n<li><code>steps[x].title</code> 步骤标题。</li>\n<li><code>steps[x].mode</code> 展示默认，跟 <a href=\"#/docs/renderers/Form\">Form</a> 中的模式一样，选择： <code>normal</code>、<code>horizontal</code>或者<code>inline</code>。</li>\n<li><code>steps[x].horizontal</code> 当为水平模式时，用来控制左右占比。</li>\n<li><code>steps[x].horizontal.label</code> 左边 label 的宽度占比。</li>\n<li><code>steps[x].horizontal.right</code> 右边控制器的宽度占比。</li>\n<li><code>steps[x].horizontal.offset</code> 当没有设置 label 时，右边控制器的偏移量。</li>\n<li><code>steps[x].api</code> 当前步骤保存接口，可以不配置。</li>\n<li><code>steps[x].initApi</code> 当前步骤数据初始化接口。</li>\n<li><code>steps[x].initFetch</code> 当前步骤数据初始化接口是否初始拉取。</li>\n<li><code>steps[x].initFetchOn</code> 当前步骤数据初始化接口是否初始拉取，用表达式来决定。</li>\n<li><code>steps[x].controls</code> 当前步骤的表单项集合，请参考 <a href=\"#/docs/renderers/FormItem\">FormItem</a>。</li>\n</ul>\n<div class=\"amis-preview\" style=\"height: 600px\"><script type=\"text/schema\" height=\"600\" scope=\"body\">{\n    \"type\": \"wizard\",\n    \"api\": \"https://houtai.baidu.com/api/mock2/form/saveForm?waitSeconds=2\",\n    \"mode\": \"vertical\",\n    \"steps\": [\n        {\n            \"title\": \"第一步\",\n            \"controls\": [\n                {\n                    \"name\": \"website\",\n                    \"label\": \"网址\",\n                    \"type\": \"url\",\n                    \"required\": true\n                },\n                {\n                    \"name\": \"email\",\n                    \"label\": \"邮箱\",\n                    \"type\": \"email\",\n                    \"required\": true\n                }\n            ]\n        },\n        {\n            \"title\": \"Step 2\",\n            \"controls\": [\n                {\n                    \"name\": \"email2\",\n                    \"label\": \"邮箱\",\n                    \"type\": \"email\",\n                    \"required\": true\n                }\n            ]\n        },\n        {\n            \"title\": \"Step 3\",\n            \"controls\": [\n                \"这是最后一步了\"\n            ]\n        }\n    ]\n}\n</script></div>\n",
    "toc": {
      "label": "目录",
      "type": "toc",
      "children": [
        {
          "label": "Wizard",
          "fragment": "wizard",
          "fullPath": "#wizard",
          "level": 3
        }
      ],
      "level": 0
    }
  };

});
